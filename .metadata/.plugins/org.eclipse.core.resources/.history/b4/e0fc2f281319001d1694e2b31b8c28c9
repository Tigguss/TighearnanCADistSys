syntax = "proto3";

option java_multiple_files = true;
option java_package = "ds.service1";
option java_outer_classname = "Service1Impl";

package service1;


service Service1 {

  /*
	//server streaming
  rpc fibonacci(NumberRequest) returns (stream NumberResponse) {}
	// bi directional
  rpc total(stream NumberRequest) returns (stream NumberResponse) {}
    */
}

//Method 1
// Unary - Method 1 - Water Contamination  level check in the water. UNARY RPC

    rpc check(ContaminateLimit) returns (ContaminateCheck) {}
message ContaminateLimit {
  int32 limit = 25;
}

message ContaminateCheck {
  int32 level = 2;
}


//  Method 2 - Stop Water Flow in Pipes Client Streaming


rpc sum(stream Pipe) returns (Pipe) {}
message Pipe {
  
  int32 pipeId = 2;
  PipeShutdown pipeStatus = 1;
  map <int32, ContaminateLimit> contaminateAmount = 5;		
}

enum PipeShutdown {
	OPEN = 0;
	CLOSED =1;
}


//Method 3 - Compiling data of contaminates and levels - Unary
//Pipe is used for method 3 as well.
    rpc check(Pipe) returns (Pipe) {}

