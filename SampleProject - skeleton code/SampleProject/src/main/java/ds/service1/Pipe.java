// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service1.proto

package ds.service1;

/**
 * <pre>
 *Method 2
 * </pre>
 *
 * Protobuf type {@code service1.Pipe}
 */
public  final class Pipe extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:service1.Pipe)
    PipeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Pipe.newBuilder() to construct.
  private Pipe(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Pipe() {
    pipeId_ = 0;
    pipeStatus_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Pipe(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();

            pipeStatus_ = rawValue;
            break;
          }
          case 16: {

            pipeId_ = input.readInt32();
            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              contaminateAmount_ = com.google.protobuf.MapField.newMapField(
                  ContaminateAmountDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000004;
            }
            com.google.protobuf.MapEntry<java.lang.Integer, ds.service1.ContaminateLimit>
            contaminateAmount__ = input.readMessage(
                ContaminateAmountDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            contaminateAmount_.getMutableMap().put(
                contaminateAmount__.getKey(), contaminateAmount__.getValue());
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return ds.service1.Service1Impl.internal_static_service1_Pipe_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 5:
        return internalGetContaminateAmount();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return ds.service1.Service1Impl.internal_static_service1_Pipe_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            ds.service1.Pipe.class, ds.service1.Pipe.Builder.class);
  }

  private int bitField0_;
  public static final int PIPEID_FIELD_NUMBER = 2;
  private int pipeId_;
  /**
   * <code>int32 pipeId = 2;</code>
   */
  public int getPipeId() {
    return pipeId_;
  }

  public static final int PIPESTATUS_FIELD_NUMBER = 1;
  private int pipeStatus_;
  /**
   * <code>.service1.PipeShutdown pipeStatus = 1;</code>
   */
  public int getPipeStatusValue() {
    return pipeStatus_;
  }
  /**
   * <code>.service1.PipeShutdown pipeStatus = 1;</code>
   */
  public ds.service1.PipeShutdown getPipeStatus() {
    @SuppressWarnings("deprecation")
    ds.service1.PipeShutdown result = ds.service1.PipeShutdown.valueOf(pipeStatus_);
    return result == null ? ds.service1.PipeShutdown.UNRECOGNIZED : result;
  }

  public static final int CONTAMINATEAMOUNT_FIELD_NUMBER = 5;
  private static final class ContaminateAmountDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.Integer, ds.service1.ContaminateLimit> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.Integer, ds.service1.ContaminateLimit>newDefaultInstance(
                ds.service1.Service1Impl.internal_static_service1_Pipe_ContaminateAmountEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.INT32,
                0,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                ds.service1.ContaminateLimit.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.Integer, ds.service1.ContaminateLimit> contaminateAmount_;
  private com.google.protobuf.MapField<java.lang.Integer, ds.service1.ContaminateLimit>
  internalGetContaminateAmount() {
    if (contaminateAmount_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ContaminateAmountDefaultEntryHolder.defaultEntry);
    }
    return contaminateAmount_;
  }

  public int getContaminateAmountCount() {
    return internalGetContaminateAmount().getMap().size();
  }
  /**
   * <code>map&lt;int32, .service1.ContaminateLimit&gt; contaminateAmount = 5;</code>
   */

  public boolean containsContaminateAmount(
      int key) {
    
    return internalGetContaminateAmount().getMap().containsKey(key);
  }
  /**
   * Use {@link #getContaminateAmountMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, ds.service1.ContaminateLimit> getContaminateAmount() {
    return getContaminateAmountMap();
  }
  /**
   * <code>map&lt;int32, .service1.ContaminateLimit&gt; contaminateAmount = 5;</code>
   */

  public java.util.Map<java.lang.Integer, ds.service1.ContaminateLimit> getContaminateAmountMap() {
    return internalGetContaminateAmount().getMap();
  }
  /**
   * <code>map&lt;int32, .service1.ContaminateLimit&gt; contaminateAmount = 5;</code>
   */

  public ds.service1.ContaminateLimit getContaminateAmountOrDefault(
      int key,
      ds.service1.ContaminateLimit defaultValue) {
    
    java.util.Map<java.lang.Integer, ds.service1.ContaminateLimit> map =
        internalGetContaminateAmount().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;int32, .service1.ContaminateLimit&gt; contaminateAmount = 5;</code>
   */

  public ds.service1.ContaminateLimit getContaminateAmountOrThrow(
      int key) {
    
    java.util.Map<java.lang.Integer, ds.service1.ContaminateLimit> map =
        internalGetContaminateAmount().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (pipeStatus_ != ds.service1.PipeShutdown.OPEN.getNumber()) {
      output.writeEnum(1, pipeStatus_);
    }
    if (pipeId_ != 0) {
      output.writeInt32(2, pipeId_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeIntegerMapTo(
        output,
        internalGetContaminateAmount(),
        ContaminateAmountDefaultEntryHolder.defaultEntry,
        5);
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (pipeStatus_ != ds.service1.PipeShutdown.OPEN.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, pipeStatus_);
    }
    if (pipeId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, pipeId_);
    }
    for (java.util.Map.Entry<java.lang.Integer, ds.service1.ContaminateLimit> entry
         : internalGetContaminateAmount().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.Integer, ds.service1.ContaminateLimit>
      contaminateAmount__ = ContaminateAmountDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, contaminateAmount__);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof ds.service1.Pipe)) {
      return super.equals(obj);
    }
    ds.service1.Pipe other = (ds.service1.Pipe) obj;

    boolean result = true;
    result = result && (getPipeId()
        == other.getPipeId());
    result = result && pipeStatus_ == other.pipeStatus_;
    result = result && internalGetContaminateAmount().equals(
        other.internalGetContaminateAmount());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PIPEID_FIELD_NUMBER;
    hash = (53 * hash) + getPipeId();
    hash = (37 * hash) + PIPESTATUS_FIELD_NUMBER;
    hash = (53 * hash) + pipeStatus_;
    if (!internalGetContaminateAmount().getMap().isEmpty()) {
      hash = (37 * hash) + CONTAMINATEAMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + internalGetContaminateAmount().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static ds.service1.Pipe parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ds.service1.Pipe parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ds.service1.Pipe parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ds.service1.Pipe parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ds.service1.Pipe parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ds.service1.Pipe parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ds.service1.Pipe parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ds.service1.Pipe parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static ds.service1.Pipe parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static ds.service1.Pipe parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static ds.service1.Pipe parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ds.service1.Pipe parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(ds.service1.Pipe prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   *Method 2
   * </pre>
   *
   * Protobuf type {@code service1.Pipe}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:service1.Pipe)
      ds.service1.PipeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ds.service1.Service1Impl.internal_static_service1_Pipe_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetContaminateAmount();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetMutableContaminateAmount();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ds.service1.Service1Impl.internal_static_service1_Pipe_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ds.service1.Pipe.class, ds.service1.Pipe.Builder.class);
    }

    // Construct using ds.service1.Pipe.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      pipeId_ = 0;

      pipeStatus_ = 0;

      internalGetMutableContaminateAmount().clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return ds.service1.Service1Impl.internal_static_service1_Pipe_descriptor;
    }

    @java.lang.Override
    public ds.service1.Pipe getDefaultInstanceForType() {
      return ds.service1.Pipe.getDefaultInstance();
    }

    @java.lang.Override
    public ds.service1.Pipe build() {
      ds.service1.Pipe result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public ds.service1.Pipe buildPartial() {
      ds.service1.Pipe result = new ds.service1.Pipe(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.pipeId_ = pipeId_;
      result.pipeStatus_ = pipeStatus_;
      result.contaminateAmount_ = internalGetContaminateAmount();
      result.contaminateAmount_.makeImmutable();
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof ds.service1.Pipe) {
        return mergeFrom((ds.service1.Pipe)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(ds.service1.Pipe other) {
      if (other == ds.service1.Pipe.getDefaultInstance()) return this;
      if (other.getPipeId() != 0) {
        setPipeId(other.getPipeId());
      }
      if (other.pipeStatus_ != 0) {
        setPipeStatusValue(other.getPipeStatusValue());
      }
      internalGetMutableContaminateAmount().mergeFrom(
          other.internalGetContaminateAmount());
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      ds.service1.Pipe parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (ds.service1.Pipe) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int pipeId_ ;
    /**
     * <code>int32 pipeId = 2;</code>
     */
    public int getPipeId() {
      return pipeId_;
    }
    /**
     * <code>int32 pipeId = 2;</code>
     */
    public Builder setPipeId(int value) {
      
      pipeId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 pipeId = 2;</code>
     */
    public Builder clearPipeId() {
      
      pipeId_ = 0;
      onChanged();
      return this;
    }

    private int pipeStatus_ = 0;
    /**
     * <code>.service1.PipeShutdown pipeStatus = 1;</code>
     */
    public int getPipeStatusValue() {
      return pipeStatus_;
    }
    /**
     * <code>.service1.PipeShutdown pipeStatus = 1;</code>
     */
    public Builder setPipeStatusValue(int value) {
      pipeStatus_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.service1.PipeShutdown pipeStatus = 1;</code>
     */
    public ds.service1.PipeShutdown getPipeStatus() {
      @SuppressWarnings("deprecation")
      ds.service1.PipeShutdown result = ds.service1.PipeShutdown.valueOf(pipeStatus_);
      return result == null ? ds.service1.PipeShutdown.UNRECOGNIZED : result;
    }
    /**
     * <code>.service1.PipeShutdown pipeStatus = 1;</code>
     */
    public Builder setPipeStatus(ds.service1.PipeShutdown value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      pipeStatus_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.service1.PipeShutdown pipeStatus = 1;</code>
     */
    public Builder clearPipeStatus() {
      
      pipeStatus_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.Integer, ds.service1.ContaminateLimit> contaminateAmount_;
    private com.google.protobuf.MapField<java.lang.Integer, ds.service1.ContaminateLimit>
    internalGetContaminateAmount() {
      if (contaminateAmount_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ContaminateAmountDefaultEntryHolder.defaultEntry);
      }
      return contaminateAmount_;
    }
    private com.google.protobuf.MapField<java.lang.Integer, ds.service1.ContaminateLimit>
    internalGetMutableContaminateAmount() {
      onChanged();;
      if (contaminateAmount_ == null) {
        contaminateAmount_ = com.google.protobuf.MapField.newMapField(
            ContaminateAmountDefaultEntryHolder.defaultEntry);
      }
      if (!contaminateAmount_.isMutable()) {
        contaminateAmount_ = contaminateAmount_.copy();
      }
      return contaminateAmount_;
    }

    public int getContaminateAmountCount() {
      return internalGetContaminateAmount().getMap().size();
    }
    /**
     * <code>map&lt;int32, .service1.ContaminateLimit&gt; contaminateAmount = 5;</code>
     */

    public boolean containsContaminateAmount(
        int key) {
      
      return internalGetContaminateAmount().getMap().containsKey(key);
    }
    /**
     * Use {@link #getContaminateAmountMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, ds.service1.ContaminateLimit> getContaminateAmount() {
      return getContaminateAmountMap();
    }
    /**
     * <code>map&lt;int32, .service1.ContaminateLimit&gt; contaminateAmount = 5;</code>
     */

    public java.util.Map<java.lang.Integer, ds.service1.ContaminateLimit> getContaminateAmountMap() {
      return internalGetContaminateAmount().getMap();
    }
    /**
     * <code>map&lt;int32, .service1.ContaminateLimit&gt; contaminateAmount = 5;</code>
     */

    public ds.service1.ContaminateLimit getContaminateAmountOrDefault(
        int key,
        ds.service1.ContaminateLimit defaultValue) {
      
      java.util.Map<java.lang.Integer, ds.service1.ContaminateLimit> map =
          internalGetContaminateAmount().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .service1.ContaminateLimit&gt; contaminateAmount = 5;</code>
     */

    public ds.service1.ContaminateLimit getContaminateAmountOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, ds.service1.ContaminateLimit> map =
          internalGetContaminateAmount().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearContaminateAmount() {
      internalGetMutableContaminateAmount().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;int32, .service1.ContaminateLimit&gt; contaminateAmount = 5;</code>
     */

    public Builder removeContaminateAmount(
        int key) {
      
      internalGetMutableContaminateAmount().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, ds.service1.ContaminateLimit>
    getMutableContaminateAmount() {
      return internalGetMutableContaminateAmount().getMutableMap();
    }
    /**
     * <code>map&lt;int32, .service1.ContaminateLimit&gt; contaminateAmount = 5;</code>
     */
    public Builder putContaminateAmount(
        int key,
        ds.service1.ContaminateLimit value) {
      
      if (value == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableContaminateAmount().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;int32, .service1.ContaminateLimit&gt; contaminateAmount = 5;</code>
     */

    public Builder putAllContaminateAmount(
        java.util.Map<java.lang.Integer, ds.service1.ContaminateLimit> values) {
      internalGetMutableContaminateAmount().getMutableMap()
          .putAll(values);
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:service1.Pipe)
  }

  // @@protoc_insertion_point(class_scope:service1.Pipe)
  private static final ds.service1.Pipe DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ds.service1.Pipe();
  }

  public static ds.service1.Pipe getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Pipe>
      PARSER = new com.google.protobuf.AbstractParser<Pipe>() {
    @java.lang.Override
    public Pipe parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Pipe(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Pipe> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Pipe> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public ds.service1.Pipe getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

