// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service1.proto

package ds.service1;

public interface PipeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:service1.Pipe)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>int32 pipeId = 2;</code>
   */
  int getPipeId();

  /**
   * <code>.service1.PipeShutdown pipeStatus = 1;</code>
   */
  int getPipeStatusValue();
  /**
   * <code>.service1.PipeShutdown pipeStatus = 1;</code>
   */
  ds.service1.PipeShutdown getPipeStatus();

  /**
   * <code>map&lt;int32, .service1.ContaminateLimit&gt; contaminateAmount = 5;</code>
   */
  int getContaminateAmountCount();
  /**
   * <code>map&lt;int32, .service1.ContaminateLimit&gt; contaminateAmount = 5;</code>
   */
  boolean containsContaminateAmount(
      int key);
  /**
   * Use {@link #getContaminateAmountMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, ds.service1.ContaminateLimit>
  getContaminateAmount();
  /**
   * <code>map&lt;int32, .service1.ContaminateLimit&gt; contaminateAmount = 5;</code>
   */
  java.util.Map<java.lang.Integer, ds.service1.ContaminateLimit>
  getContaminateAmountMap();
  /**
   * <code>map&lt;int32, .service1.ContaminateLimit&gt; contaminateAmount = 5;</code>
   */

  ds.service1.ContaminateLimit getContaminateAmountOrDefault(
      int key,
      ds.service1.ContaminateLimit defaultValue);
  /**
   * <code>map&lt;int32, .service1.ContaminateLimit&gt; contaminateAmount = 5;</code>
   */

  ds.service1.ContaminateLimit getContaminateAmountOrThrow(
      int key);
}
